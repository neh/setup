---
- hosts: desktops:&{{ limit_hosts | default('all') }}
  sudo: yes
  # remote_user: "{{ remote_user | default(ansible_user_name) }}"

  tags:
    - desktop

  vars:
    ansible_user_name: nathan

  vars_files:
    - "vars/{{ ansible_distribution_release }}.yml"

  tasks:
    - name: Add apt keys
      apt_key: url="{{item}}"
               state=present
      with_items:
        - 'https://www.virtualbox.org/download/oracle_vbox.asc'

    - name: Add apt repositories
      apt_repository: repo="{{item}}"
                      state=present
                      update_cache=yes
      with_items:
        - 'ppa:neovim-ppa/unstable'
        - 'ppa:synapse-core/ppa'
        - 'deb http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib'
        - 'ppa:rael-gc/scudcloud'
        - 'ppa:atareao/telegram'
        - 'deb http://debian.sur5r.net/i3/ {{ ansible_distribution_release }} universe'
        # - 'ppa:daniel.pavel/solaar'
      tags:
        - apt_repos

    - name: Install i3 keyring
      apt: pkg=sur5r-keyring
           force=yes
      register: i3_keyring
      tags:
        - apt_repos

    - name: Update apt-cache
      apt: update_cache=yes
      when: i3_keyring|changed
      tags:
        - apt_repos

    - name: Install apt packages
      apt: pkg={{ item }}
           state=installed
      with_items: apt_packages
      tags:
        - packages

    - name: Install pip packages
      pip: name={{ item }}
           state=present
      with_items:
        - ansible
        - netaddr
        - neovim
      tags:
        - packages

        # TODO
    #- name: Install vagrant

    - name: Divert scudcloud icon
      command: dpkg-divert --add --rename --divert /opt/scudcloud/resources/scudcloud.png.real /opt/scudcloud/resources/scudcloud.png
      args:
        creates: /opt/scudcloud/resources/scudcloud.png.real
      tags:
        - sicon

    - name: Replace scudcloud icon
      copy: src=files/scudcloud.png
            dest=/opt/scudcloud/resources/scudcloud.png
            owner=root
            group=root
            mode=0644
      tags:
        - sicon

    - include: vivid.yml
      when: ansible_distribution_release == 'vivid'

    - name: Allow suspending without a password
      lineinfile: dest=/etc/sudoers
                  state=present
                  line="nathan ALL=(ALL) NOPASSWD:/usr/sbin/pm-suspend"
                  validate="visudo -cf %s"

    - name: Set some default apps
      alternatives: name="{{ item.name }}"
                    path="{{ item.path }}"

      with_items:
        - name: x-www-browser
          path: /usr/bin/chromium-browser

        - name: editor
          path: /usr/bin/nvim

        - name: x-terminal-emulator
          path: /usr/bin/urxvtcd

      tags:
        - default_apps



- hosts: desktops:&{{ limit_hosts | default('all') }}
  sudo: no
  # remote_user: "{{ remote_user | default(ansible_user_name) }}"

  tags:
    - desktop_setup

  vars:
    rebuild_xmonad: no
    xmonad_build_cmds:
      - "runhaskell Setup.lhs clean"
      - "runhaskell Setup.lhs configure --prefix={{ ansible_env.HOME }} --user"
      - "runhaskell Setup.lhs build"
      - "runhaskell Setup.lhs install --user"

    dotfiles_links:
      - src: gitconfig
        dest: .gitconfig
      - src: gitexcludes
        dest: .gitexcludes

      - src: screenrc
        dest: .screenrc
      - src: tmux.conf
        dest: .tmux.conf

      - src: zsh/zshrc
        dest: .zshrc
      - src: zsh/zshenv
        dest: .zshenv
      - src: zsh/zsh
        dest: .zsh
      - src: zsh/oh-my-zsh
        dest: .oh-my-zsh

      - src: profile
        dest: .profile

      - src: vim/vimrc
        dest: .vimrc
      - src: vim/vim
        dest: .vim
      - src: vim/vimrc
        dest: .nvimrc
      - src: vim/vim
        dest: .nvim

      - src: ssh.config
        dest: .ssh/config

      - src: i3/config
        dest: .config/i3/config
      - src: i3/i3status.conf
        dest: .i3status.conf
      - src: i3/dunstrc
        dest: .config/dunst/dunstrc

      - src: terminfo
        dest: .terminfo

      - src: Xresources
        dest: .Xresources
      - src: Xresources
        dest: .Xdefaults

  tasks:
    # - name: Clone dotfiles repo
    #   git: repo=git://github.com/neh/myconfig.git
    #        dest=/home/nathan/myconfig
    #        accept_hostkey=yes
    #   tags:
    #     - dotfiles

    - name: Ensure necessary dirs exist
      file: path=/home/nathan/{{ item }}
            state=directory
            owner=nathan
            group=nathan
            mode=0755
      with_items:
        - bin
        - src
        - .config/autostart
        - .config/i3
        - .config/dunst
      tags:
        - dotfiles

    - name: Link dotfiles
      file: src=/home/nathan/myconfig/{{ item.src }}
            dest=/home/nathan/{{ item.dest }}
            state=link
            force=yes
      with_items: dotfiles_links
      tags:
        - dotfiles


    - name: Copy autostart files
      copy: src=files/{{ item }}.desktop
            dest=/home/nathan/.config/autostart/{{ item }}.desktop
            owner=nathan
            group=nathan
            mode=0664
      with_items:
        - xcape
        - compton


    - name: Make mouse cursor visible
      sudo: no
      command: gsettings set org.gnome.settings-daemon.plugins.cursor active false


    - name: Check for keybindings for less
      stat: path=/home/nathan/myconfig/lesskey
      register: lesskey_stat

    - name: Set keybindings for less
      command: lesskey myconfig/lesskey
               chdir=/home/nathan
      when: lesskey_stat.stat.exists
      changed_when: false


    - name: Build xcape
      command: make
               chdir=/home/nathan/myconfig/xcape
               creates=/home/nathan/myconfig/xcape/xcape

    - name: Link xcape binary
      file: src=/home/nathan/myconfig/xcape/xcape
            dest=/home/nathan/bin/xcape
            state=link

    - name: Get autorandr git repo
      git: repo=https://github.com/phillipberndt/autorandr.git
           dest=/home/nathan/src/autorandr
      tags:
        - autorandr

    - name: Install autorandr
      sudo: yes
      command: "{{ item }}"
      args:
        chdir: "/home/nathan/src/autorandr"
      with_items:
        - "make install"
        - "make hotplug"
      tags:
        - autorandr


    - name: Set shell
      sudo: yes
      user: name=nathan
            shell=/usr/bin/zsh


    - name: Install vim plugins
      command: nvim +BundleInstall +qall
               chdir=/home/nathan
